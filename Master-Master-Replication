1. #percona Installation
<< yum -y install https://repo.percona.com/yum/percona-release-latest.noarch.rpm
<< percona-release setup ps80
## Then install the latest Percona Server and Percona Xtrabackup
<< yum -y install percona-server-server percona-xtrabackup-80
<< systemctl enable mysql
<< systemctl start mysql
## change the root password 
<< cat /var/log/mysqld.log | grep temporary
<< mysql_secure_installation

1. #---------------Master-slave replication----------------------------------

##in master node (54.255.35.109)
# add this line to master-node under mysqld 
<< vi /etc/my.conf

#-----------------------------------------------------------
# Compatibility
default-authentication-plugin = mysql_native_password
 
# Replication
server_id = 1 # must be distinct on all nodes in the cluster
binlog_format = ROW
log_bin = binlog
log_slave_updates = 1
gtid_mode = ON
enforce_gtid_consistency = 1
binlog_expire_logs_seconds = 604800 # 7 days
sync_binlog = 1
report_host = 192.168.0.61 # IP address of this host
read_only = OFF # Set ON on slave
super_read_only = OFF # Set ON on slave
 
# Replication safety
master_info_repository = TABLE
relay_log_info_repository = TABLE
relay_log_recovery = ON

#------------------------------------------------------------------
now login to mysql as root
<< mysql -u root -p 
and run this cmd 
<< CREATE USER 'slave'@'18.139.32.64' IDENTIFIED WITH mysql_native_password BY 'c7SdB239@8XMn2&9';
<< GRANT REPLICATION SLAVE ON *.* TO 'slave'@'18.139.32.64';
<< SHOW MASTER STATUS\G


#in slave-node (18.139.32.64)
## add this line to slave-node under mysqld in /etc/my.conf
<< vi /etc/my.conf

#-----------------------------------------------------------
# Compatibility
default-authentication-plugin = mysql_native_password
 
# Replication
server_id = 2 # must be distinct on all nodes in the cluster
binlog_format = ROW
log_bin = binlog
log_slave_updates = 1
gtid_mode = ON
enforce_gtid_consistency = 1
binlog_expire_logs_seconds = 604800 # 7 days
sync_binlog = 1
report_host = 192.168.0.62 # IP address of this host
read_only = OFF # Set ON on slave
super_read_only = OFF # Set ON on slave
 
# Replication safety
master_info_repository = TABLE
relay_log_info_repository = TABLE
relay_log_recovery = ON

#------------------------------------------------------------------
now login to mysql as root
<< mysql -u root -p 
and run this cmd 

<< CHANGE MASTER TO
                MASTER_HOST='54.255.35.109',
                MASTER_USER='slave',
                MASTER_PASSWORD='c7SdB239@8XMn2&9',
                MASTER_LOG_FILE='binlog.000002',
                MASTER_LOG_POS=683;
<< START SLAVE;
<< SHOW SLAVE STATUS\G

*Note;  create the data base at master-node and see the database will sync to slave-node. this means master-slave replication is working.


2. #-------------------------------------now for Master-Master replication-------------------------
*Note;  The master-slave replication is working, Now just make slave-node as master and master-node as slave. It means data-base will sync both way. 

## slave-node  (now treat slave-node as master for master-node)
#login to mysql
<< mysql -u root -p
#and run this cmd  ( add the slave user which already has been added to master-node)

<<  CREATE USER 'slave'@'54.255.35.109' IDENTIFIED WITH mysql_native_password BY 'c7SdB239@8XMn2&9';
<<  GRANT REPLICATION SLAVE ON *.* TO 'slave'@'54.255.35.109';
<<  SHOW MASTER STATUS\G


## master-node (now treat master-node as slave for slave-node)
#login to mysql
<<  mysql -u root -p
#and run this cmd  ( and start the slave)
<<  CHANGE MASTER TO
                MASTER_HOST='18.139.32.64',
                MASTER_USER='slave',
                MASTER_PASSWORD='c7SdB239@8XMn2&9',
                MASTER_LOG_FILE='binlog.000003',
                MASTER_LOG_POS=1249;

<< START SLAVE;
<< SHOW SLAVE STATUS\G
##verify master-master replication
*Note;  create the data base at master-node and slave-node and see the database will sync in both nodes. this means master-master replication is working.

---------------------------------the end---------------------------------------------------------------------------
#####some cmd for start, stop slave and delete SLAVE
<< START SLAVE;
<< STOP SLAVE;
<< RESET SLAVE ALL;
<< FLUSH PRIVILEGES;
###query command for user list and host
SELECT User, Host FROM mysql.user;

## delete user 
<< DROP user <user-name>;
â€¢ if by this cmd won't work then do this
<< delete from mysql.user 
where user='slave'
and host = 'IP';


------------------------------------------------------THE END-------------------------------------------------------------
Reference;  https://severalnines.com/database-blog/how-deploy-percona-server-mysql-high-availability 

2nd :  https://www.percona.com/doc/percona-xtrabackup/2.3/howtos/setting_up_replication.html
